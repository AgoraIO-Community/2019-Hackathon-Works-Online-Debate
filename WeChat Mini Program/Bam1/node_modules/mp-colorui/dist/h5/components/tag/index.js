import Nerv from "nervjs";
import { View } from '@tarojs/components';
import Taro from "@tarojs/taro-h5";
import { BG_COLOR_LIST } from '../utils/model';
export default class ClTag extends Taro.Component {
  onClick(index) {
    this.props.onClick && this.props.onClick(index);
  }
  render() {
    const shapeClassName = this.props.shape ? this.props.shape === 'normal' ? '' : this.props.shape : '';
    const colorClassName = color => {
      return BG_COLOR_LIST[color || 'blue'];
    };
    const plainClassName = color => {
      return `line-${color}`;
    };
    const sizeClassName = () => {
      if (this.props.size === 'normal') return '';else return 'sm';
    };
    const badgeClassName = badge => badge ? 'badge' : '';
    let normalComponent;
    let capsuleComponent;
    if (this.props.tags.length > 0) {
      const tag = this.props.tags[0];
      normalComponent = <View className={`cu-tag ${shapeClassName} ${tag.plain ? plainClassName(tag.color) : colorClassName(tag.color)} ${sizeClassName()} ${badgeClassName(this.props.badge)}`} style={{ overflow: 'hidden' }}>
          {tag.text}
        </View>;
      this.props.tags.length > 1 && (capsuleComponent = <View className={`cu-capsule ${shapeClassName}  ${sizeClassName()}`} style={{ overflow: 'hidden' }}>
            {this.props.tags.map((tag, index) => <View key={tag.text} className={`cu-tag ${tag.plain ? plainClassName(tag.color) : colorClassName(tag.color)}`} onClick={this.onClick.bind(this, index)}>
                {tag.text}
              </View>)}
          </View>);
    }
    return this.props.tags.length > 1 ? capsuleComponent : normalComponent;
  }
}
ClTag.options = {
  addGlobalClass: true
};
ClTag.defaultProps = {
  shape: 'normal',
  size: 'normal',
  canTouch: false,
  tags: []
};