import Nerv from "nervjs";
import Taro from "@tarojs/taro-h5";
import { View } from "@tarojs/components";
import defaultRules from '../utils/rules';
import context from './context';
const date = {};
export const FormContext = Taro.createContext(date);
export default class ClForm extends Taro.Component {
  validate(fn) {
    let flag = true;
    const { model, rules } = this.props;
    const modelData = model || {};
    const rulesData = rules || {};
    const ruleKeys = Object.keys(rules || {}) || [];
    ruleKeys.forEach(key => {
      const ruleFunc = rulesData[key];
      const value = modelData[key];
      flag = flag && ruleFunc(defaultRules, value, () => {});
    });
    return fn(flag);
  }

  render() {
    const { model, rules } = this.props;
    context.provider = {
      model,
      rules
    };
    return <View>
        <FormContext.Provider value={{ model, rules }}>
          {this.props.children}
        </FormContext.Provider>
      </View>;
  }
}
ClForm.contextType = FormContext;
ClForm.defaultProps = {
  model: {},
  rules: {}
};
ClForm.options = {
  addGlobalClass: true
};