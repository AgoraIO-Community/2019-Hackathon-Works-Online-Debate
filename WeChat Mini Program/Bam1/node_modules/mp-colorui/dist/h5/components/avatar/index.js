import Nerv from "nervjs";
import { Text, View } from '@tarojs/components';
import Taro from "@tarojs/taro-h5";
import { isNumber, generateId } from "../utils/index";
import { BG_COLOR_LIST } from '../utils/model';

class ClAvatar extends Taro.Component {
  render() {
    const props = this.props;

    const [headList, setHeadList] = Taro.useState(props.headerArray);
    Taro.useEffect(() => {
      const list = props.headerArray || [];
      setHeadList(list.map(item => {
        item.cu_avatar_id = generateId();
        return item;
      }));
    }, [props.headerArray]);
    const onClick = () => {
      props.onClick && props.onClick();
    };
    const customSize = {
      'small': 48,
      'normal': 64,
      'large': 96,
      'xlarge': 128
    };
    const width = isNumber(props.size) ? Taro.pxTransform(props.size) : Taro.pxTransform(customSize[props.size || 'normal']);
    const height = isNumber(props.size) ? Taro.pxTransform(props.size) : Taro.pxTransform(customSize[props.size || 'normal']);
    const em = isNumber(props.size) ? props.size / 48 : customSize[props.size || 'normal'] / 48;
    const avatarArray = headList ? headList.map(item => <View key={item.cu_avatar_id} className={`${props.shape}  ${BG_COLOR_LIST[item.bgColor || 'black']} ${props.shadow ? 'shadow' : ''} cu-avatar`} style={item.url ? {
      backgroundImage: `url(${item.url})`,
      width,
      height,
      fontSize: `${em}em`
    } : { width, height, fontSize: `${em}em` }}>
        <Text className={`cuIcon-${item.icon}`}>
          {item.text ? item.text.slice(0, 1) : ''}
        </Text>
        {item.tag ? <View className={`cu-tag badge cuIcon-${item.tag} ${item.tagColor ? BG_COLOR_LIST[item.tagColor] : ''}`} /> : ''}
      </View>) : <View />;
    const avatarArrayComponent = <View className="cu-avatar-group" onClick={() => {
      onClick();
    }}>
      {avatarArray}
    </View>;
    return props.headerArray && props.headerArray.length > 1 ? avatarArrayComponent : <View onClick={() => {
      onClick();
    }}>
        {avatarArray}
      </View>;
  }

}

ClAvatar.options = {
  addGlobalClass: true
};
ClAvatar.defaultProps = {
  size: 'normal',
  shape: 'radius',
  type: 'normal',
  headerArray: [],
  shadow: true
};
export default ClAvatar;